(function(){var e,t=function(e,t){return function(){return e.apply(t,arguments)}};e=function(){function e(){this.kill=t(this.kill,this),this.req=t(this.req,this),this.xhr=new XMLHttpRequest}return e.prototype.req=function(e){var t,r,s,n,o,u,l,i,d,h,a,c,m,f,R,p;if(r={url:null!=(n=e.url)?n:null,method:null!=(o=e.method)?o:"get",json:null!=(d=e.json)?d:null,body:null!=(h=e.body)?h:null,mime:null!=(a=e.mime)?a:null,timeout:null!=(c=e.timeout)?c:0,headers:null!=(m=e.headers)?m:null,username:null!=(f=e.username)?f:null,password:null!=(R=e.password)?R:null,async:null!=(p=e.async)?p:!0,success:null!=(u=e.success)?u:null,error:null!=(l=e.success)?l:null},"function"==typeof r.success){if("function"==typeof r.error){if(this.xhr.addEventListener("abort",function(){return console.log("[SeXHR] Request aborted."),r.success({abort:!0})},!1),this.xhr.addEventListener("error",function(){return console.log("[SeXHR] Request error."),r.error({error:!0})},!1),this.xhr.addEventListener("load",function(){var e;return console.log("[SeXHR] Request loaded."),e={text:this.responseText,status:this.statusCode,headers:this.getAllResponseHeaders().split("\n")},r.json&&(e.json=JSON.parse(e.text)),e.status>99&&e.status<400?r.success(e):r.error(e)},!1),this.xhr.addEventListener("loadstart",function(){return console.log("[SeXHR] Request initiated.")},!1),this.xhr.addEventListener("progress",function(e){return e.lengthComputable?console.log("[SeXHR] Request progress: "+e.loaded/e.total*100+"% ("+e.loaded+" bytes / "+e.total+" bytes)"):void 0},!1),this.xhr.addEventListener("timeout",function(){return console.log("[SeXHR] Request timed out."),r.error({timeout:!0})},!1),this.xhr.addEventListener("loadend",function(){return console.log("[SeXHR] Request completed.")},!1),r.url){if(r.username&&r.password?this.xhr.open(r.method,r.url,r.async,r.username,r.password):this.xhr.open(r.method,r.url,r.async),r.timeout>0&&r.async&&(this.xhr.timeout=r.timeout),null!=r.headers){i=r.headers;for(t in i)s=i[t],this.xhr.setRequestHeader(t,s)}return null!=r.mime&&this.xhr.overrideMimeType(r.mime),this.xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),this.xhr.send(r.body)}return console.error("[SeXHR] Request `url` is undefined.")}return console.error("[SeXHR] Request `error` handler is undefined.")}return console.error("[SeXHR] Request `success` handler is undefined.")},e.prototype.kill=function(){return this.xhr.abort()},e}(),this.sexhr=e}).call(this);
