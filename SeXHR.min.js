(function(d){function e(){var c=new XMLHttpRequest;this.req=function(a){var b={url:a.hasOwnProperty("url")?a.url:"",method:a.hasOwnProperty("method")?a.method:"get",json:a.hasOwnProperty("json")?a.json:!1,body:a.hasOwnProperty("body")?a.body:null,mime:a.hasOwnProperty("mime")?a.mime:"",timeout:a.hasOwnProperty("timeout")?a.timeout:0,headers:a.hasOwnProperty("headers")?a.headers:void 0,username:a.hasOwnProperty("username")?a.username:"",password:a.hasOwnProperty("password")?a.password:"",async:a.hasOwnProperty("async")?
a.async:!0,success:a.hasOwnProperty("success")?a.success:void 0,error:a.hasOwnProperty("error")?a.error:void 0};if("function"===typeof b.success)if("function"===typeof b.error)if(c.addEventListener("abort",function(a){console.log("[SeXHR]: Request aborted");b.success({abort:!0})},!1),c.addEventListener("error",function(a){console.error("[SeXHR]: Request error");b.error({error:!0})},!1),c.addEventListener("load",function(a){console.log("[SeXHR]: Request loaded");a={text:c.responseText,status:c.status,
headers:c.getAllResponseHeaders().split("\n")};100<a.status&&400>a.status?(b.json&&(a.json=JSON.parse(a.text)),b.success(a)):b.error(a)},!1),c.addEventListener("loadstart",function(a){console.log("[SeXHR]: Request initiated")},!1),c.addEventListener("progress",function(a){a.lengthComputable&&console.log("[SeXHR]: Request progress "+a.loaded/a.total*100+"% ("+a.loaded+" bytes / "+a.total+" bytes)")},!1),c.addEventListener("timeout",function(a){console.log("[SeXHR]: Request timed out");b.error({timeout:!0})},
!1),c.addEventListener("loadend",function(a){console.log("[SeXHR]: Request completed")},!1),""!==b.url){b.username&&b.password?c.open(b.method,b.url,b.async,b.username,b.password):c.open(b.method,b.url,b.async);if(b.headers){a=Object.keys(b.headers);for(var d in a)c.setRequestHeader(a[d],b.headers[a[d]])}""!==b.mime&&c.overrideMimeType(b.mime);0<b.timeout&&(!0===b.async?c.timeout=b.timeout:console.error("[SeXHR]: In accordance with the XMLHttpRequest specification, a timeout duration can only be specified for asynchronous requests."));
c.send(b.body)}else console.error("[SeXHR]: No request URL given");else console.error("[SeXHR]: No request `error` handler given");else console.error("[SeXHR]: No request `success` handler given")};this.kill=function(){c.abort()};this.request=this.req;this.cancel=this.kill}d.SeXHR=e;d.sexhr=e})(window);